
#you can uncomment next two lines for easy debug
daemon  off;
#Warning: if master_process is off, there will be only one nginx worker running. Only use it for debug propose.
master_process  off;

#user  nobody;
#you can set worker_processes =1 for easy debug
#if master_process is off, the count of worker processes will be 1 regardless of worker_processes settings
worker_processes  1;


error_log   logs/error.log;
#error_log   logs/error.log  debug;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1000;
    #debug_connection 127.0.0.1;
    multi_accept on;
}


http {

    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;


    jvm_path "/usr/lib/jvm/java-7-oracle/jre/lib/amd64/server/libjvm.so";

    #coroutine agent
    
    #run tool mode , 't' means Tool
    #jvm_options "-javaagent:/home/who/git/nginx-clojure/target/nginx-clojure-0.2.1.jar=tmb";
    #Setting Output Path of Waving Configuration File, default is $nginx-workdir/nginx.clojure.wave.CfgToolOutFile
    #jvm_options "-Dnginx.clojure.wave.CfgToolOutFile=/tmp/my-wave-cfg.txt";
    
    #coroutine enabled mode
    jvm_options "-javaagent:/home/who/git/nginx-clojure/target/nginx-clojure-0.2.4.jar=mb";
    #for win32, class path seperator is ";"
    jvm_options "-Xbootclasspath/a:/home/who/git/nginx-clojure/target/nginx-clojure-0.2.4.jar:/home/who/.m2/repository/org/clojure/clojure/1.5.1/clojure-1.5.1.jar";
   
   
    #wave log level, default is error
    #jvm_options "-Dnginx.clojure.logger.wave.level=info";
    
    #nginx clojure log level, default is info
    #jvm_options "-Dnginx.clojure.logger.level=info";

    #jvm_options "-Dnginx.clojure.wave.trace.classmethodpattern=com.mysql.jdbc.ConnectionImpl.loadServerVariables.*";
    #jvm_options "-Dnginx.clojure.wave.trace.classpattern=com.mysql.jdbc.StatementImpl";

    #including ring-core & compojure & clj-http & clj-jdbc & mysql-connector-java for test
    jvm_options "-Djava.class.path=coroutine-udfs:/home/who/git/nginx-clojure/bin:/home/who/git/nginx-clojure/src/test/clojure:/home/who/git/nginx-clojure/src/clojure:/home/who/git/nginx-clojure/dev-resources:/home/who/git/nginx-clojure/resources:/home/who/git/nginx-clojure/target/classy-files:/home/who/.m2/repository/org/apache/httpcomponents/httpclient/4.3.1/httpclient-4.3.1.jar:/home/who/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/who/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/who/.m2/repository/cheshire/cheshire/5.2.0/cheshire-5.2.0.jar:/home/who/.m2/repository/slingshot/slingshot/0.10.3/slingshot-0.10.3.jar:/home/who/.m2/repository/ring/ring-codec/1.0.0/ring-codec-1.0.0.jar:/home/who/.m2/repository/clout/clout/1.1.0/clout-1.1.0.jar:/home/who/.m2/repository/org/clojure/tools.reader/0.7.3/tools.reader-0.7.3.jar:/home/who/.m2/repository/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/home/who/.m2/repository/org/clojure/core.incubator/0.1.0/core.incubator-0.1.0.jar:/home/who/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.2.1/jackson-dataformat-smile-2.2.1.jar:/home/who/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/home/who/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.2.1/jackson-core-2.2.1.jar:/home/who/.m2/repository/ring/ring-core/1.2.1/ring-core-1.2.1.jar:/home/who/.m2/repository/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar:/home/who/.m2/repository/org/clojure/tools.macro/0.1.0/tools.macro-0.1.0.jar:/home/who/.m2/repository/commons-codec/commons-codec/1.8/commons-codec-1.8.jar:/home/who/.m2/repository/crouton/crouton/0.1.1/crouton-0.1.1.jar:/home/who/.m2/repository/clj-time/clj-time/0.4.4/clj-time-0.4.4.jar:/home/who/.m2/repository/org/clojure/tools.nrepl/0.2.3/tools.nrepl-0.2.3.jar:/home/who/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/home/who/.m2/repository/clj-http/clj-http/0.7.8/clj-http-0.7.8.jar:/home/who/.m2/repository/org/apache/httpcomponents/httpmime/4.3.1/httpmime-4.3.1.jar:/home/who/.m2/repository/org/clojure/clojure/1.5.1/clojure-1.5.1.jar:/home/who/.m2/repository/org/jsoup/jsoup/1.7.1/jsoup-1.7.1.jar:/home/who/.m2/repository/clojure-complete/clojure-complete/0.2.3/clojure-complete-0.2.3.jar:/home/who/.m2/repository/tigris/tigris/0.1.1/tigris-0.1.1.jar:/home/who/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/who/.m2/repository/joda-time/joda-time/2.1/joda-time-2.1.jar:/home/who/.m2/repository/compojure/compojure/1.1.6/compojure-1.1.6.jar:/home/who/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/home/who/.m2/repository/org/clojure/java.jdbc/0.3.3/java.jdbc-0.3.3.jar:/home/who/.m2/repository/commons-fileupload/commons-fileupload/1.3/commons-fileupload-1.3.jar:/home/who/.m2/repository/org/apache/httpcomponents/httpcore/4.3/httpcore-4.3.jar";
    
    #setting user defined class waving configuration files which are in the above boot classpath
    jvm_options "-Dnginx.clojure.wave.udfs=compojure-http-clj.txt,mysql-jdbc.txt";
    
    #for enable java remote debug uncomment next two lines, make sure "master_process = off"
    jvm_options "-Xdebug";
    jvm_options "-Xrunjdwp:server=y,transport=dt_socket,address=8400,suspend=n";
    
    #for outofmemory dump
    #jvm_options "-XX:+HeapDumpOnOutOfMemoryError";
    
    #jvm_options "-Xverify:none";
    #jvm_options "-XX:+UseSerialGC";
    
    jvm_options "-Xms1024m";
    jvm_options "-Xmx1024m";
    

    #If jvm_workers > 0 and coroutine disabled, it is threads number (per nginx worker) for request handler thread pool on jvm. 
    #jvm_workers 100;
    

    server {
        listen       8080;
        server_name  localhost;
       
       #uncomment this two lines for performance test 
       access_log off;
	     #error_log /dev/null crit;

         location / {
          clojure;
        	clojure_code ' (let [text (slurp "/home/who/git/clojure-web-server-benchmarks/servers/index.html")]
                                     (fn[req]
        						  									{:status 200 :headers {"content-type" "text/html"}
                                         :body text})
                                  )
        						
                  ';
         }

       location /java {
           handler_type 'java';
           handler_name 'nginx.clojure.java.GeneralSet4TestNginxJavaRingHandler';
       }
             
       #native nginx static file service for performance comparing
       location /ntestfile {
          alias "testfiles";
       }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

}
